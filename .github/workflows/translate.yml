name: Translate Missing Phrases

on:
  push:
    paths:
      - 'src/internationalization/en.json'  # Trigger when en.json is updated
      - 'src/internationalization/*.json'   # Trigger when any language JSON is updated

jobs:
  translate:
    runs-on: ubuntu-latest  # Use a Linux environment for the job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Checkout the code to the runner

      - name: Set up Java
        uses: actions/setup-java@v2  # Set up Java (to interact with your Java service)
        with:
          java-version: '19'

      - name: Install dependencies
        run: |
          sudo apt-get install jq  # Install jq to handle JSON files

      - name: Compare translations and collect missing phrases
        id: compare_translations
        run: |
          # Extract phrases from en.json
          en_phrases=$(jq -r 'keys[]' src/internationalization/en.json)
          
          # Initialize missing phrases variable
          missing_phrases=""
          
          # Check all other JSON files for missing phrases
          for file in src/internationalization/*.json; do
            if [[ "$file" != "src/internationalization/en.json" ]]; then
              for phrase in $en_phrases; do
                # Check if phrase is missing in the current file
                if ! jq -e ".\"$phrase\"" $file &>/dev/null; then
                  missing_phrases="$missing_phrases$phrase\n"
                fi
              done
            fi
          done
          
          echo "missing_phrases=$missing_phrases" >> $GITHUB_ENV  # Save missing phrases for later steps

      - name: Translate missing phrases
        run: |
          # Iterate over each missing phrase and translate it
          for phrase in $missing_phrases; do
            target_language="fr"  # You can adjust this for different languages (or get dynamically)
          
            # Call the Java translation service with text and target language
            translation=$(curl -s -X POST -H "Content-Type: application/json" \
              -d "{\"text\":\"$phrase\",\"targetLanguage\":\"$target_language\"}" \
              https://552a-2a06-c701-706a-6700-61f0-5e41-a32d-fe22.ngrok-free.app/api/translate)
          
            # Update the corresponding language files with the translated phrase
            jq ".\"$phrase\" = \"$translation\"" src/internationalization/*.json > temp.json && mv temp.json src/internationalization/*.json
          done

      - name: Commit and push updated translations
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add src/internationalization/*.json  # Add the updated language files
          git commit -m "Update translations"  # Commit the changes
          git push  # Push the updated files to the repository
